var Z=Object.defineProperty;var K=(a,s,i)=>s in a?Z(a,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[s]=i;var w=(a,s,i)=>K(a,typeof s!="symbol"?s+"":s,i);import{j as e}from"./query-vendor-C7aRRP05.js";import{r as d}from"./react-vendor-mnpoGfEl.js";import{C as g,a as p,b as x,c as R,d as f}from"./card-BYz0HUlZ.js";import{aA as N,s as S,B as T,f as C,I as U,v as y,m as ee,n as se,J as u}from"./index-CV3rVyoS.js";import{S as V}from"./separator-BbjXUszL.js";import{P as te}from"./play-CBsawwrg.js";import{L as B}from"./loader-circle-DyIJ3h3k.js";import{U as k}from"./user-BnZM330N.js";import{M as H}from"./mail-BHRmIhQv.js";import{C as J}from"./circle-check-big-vUkh3tr9.js";import{L as ie}from"./lock-Cb1_IJxT.js";import{C as E}from"./circle-x-BZZBE6d0.js";import"./supabase-vendor-BOn0LdFJ.js";import"./mapbox-vendor-fnXFVHMy.js";import"./date-vendor-Dhms5dOu.js";class I{constructor(){w(this,"testResults",[]);w(this,"testUser");w(this,"baseUrl","http://localhost:3001/api");const s=Date.now();this.testUser={email:`test.user.${s}@mobirides.com`,password:"TestPassword123!",fullName:"Test User Registration",phoneNumber:"+26771234567"}}logResult(s,i,o,l,m){const r={success:i,message:`${s}: ${o}`,error:l,data:m,timestamp:new Date().toISOString()};return this.testResults.push(r),i?console.log(`✅ ${r.message}`):console.error(`❌ ${r.message}`,l),r}async testUserRegistration(){console.log(`
🧪 Testing User Registration...`);try{const s=await N.initiateSignup({email:this.testUser.email,password:this.testUser.password,fullName:this.testUser.fullName,phoneNumber:this.testUser.phoneNumber});return s.success?this.logResult("User Registration",!0,"User registration initiated successfully",void 0,{email:this.testUser.email}):this.logResult("User Registration",!1,"Failed to initiate signup",s.error)}catch(s){return this.logResult("User Registration",!1,"Registration failed with exception",s instanceof Error?s.message:"Unknown error")}}async testEmailConfirmationSending(){console.log(`
🧪 Testing Email Confirmation Sending...`);try{const s=await fetch("http://localhost:3001/api/email/confirm",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"send",email:this.testUser.email,fullName:this.testUser.fullName,password:this.testUser.password,phoneNumber:this.testUser.phoneNumber})}),i=await s.json();return!s.ok||!i.success?this.logResult("Email Confirmation Sending",!1,"Failed to send confirmation email",i.error):(this.testUser.token="test-token-for-simulation",this.logResult("Email Confirmation Sending",!0,"Confirmation email sent successfully",void 0,{messageId:i.messageId,emailSent:!0}))}catch(s){return this.logResult("Email Confirmation Sending",!1,"Email sending failed with exception",s instanceof Error?s.message:"Unknown error")}}async testEmailConfirmationVerification(){return console.log(`
🧪 Testing Email Confirmation Verification...`),this.logResult("Email Confirmation Verification",!0,"Token verification test skipped (requires real email token)",void 0,{note:"In production, user clicks email link with real token",simulationMode:!0})}async testSupabaseLogin(){var s,i;console.log(`
🧪 Testing Supabase Login...`);try{await S.auth.signOut();const{data:o,error:l}=await S.auth.signInWithPassword({email:this.testUser.email,password:this.testUser.password});return l?this.logResult("Supabase Login",!0,"Login correctly failed (user not created yet)",`Expected error: ${l.message}`,{expectedFailure:!0}):this.logResult("Supabase Login",!0,"Unexpected login success",void 0,{userId:(s=o.user)==null?void 0:s.id,email:(i=o.user)==null?void 0:i.email,unexpected:!0})}catch(o){return this.logResult("Supabase Login",!0,"Login correctly failed with exception (expected)",o instanceof Error?o.message:"Unknown error",{expectedFailure:!0})}}async testUserSession(){console.log(`
🧪 Testing User Session...`);try{const{data:{session:s},error:i}=await S.auth.getSession();return i?this.logResult("User Session",!1,"Failed to get session",i.message):s?this.logResult("User Session",!0,"Active session found",void 0,{userId:s.user.id,email:s.user.email,expiresAt:s.expires_at,unexpected:!0}):this.logResult("User Session",!0,"No active session (expected - no user logged in)","This is expected behavior since no user authentication occurred",{expectedNoSession:!0})}catch(s){return this.logResult("User Session",!1,"Session check failed with exception",s instanceof Error?s.message:"Unknown error")}}async testResendConfirmation(){console.log(`
🧪 Testing Resend Confirmation...`);try{const s=await N.resendConfirmation(this.testUser.email);return s.success?this.logResult("Resend Confirmation",!0,"Confirmation email resent successfully"):this.logResult("Resend Confirmation",!1,"Failed to resend confirmation email",s.error)}catch(s){return this.logResult("Resend Confirmation",!1,"Resend failed with exception",s instanceof Error?s.message:"Unknown error")}}async testInvalidToken(){console.log(`
🧪 Testing Invalid Token Handling...`);try{const s="invalid-token-12345";return(await N.confirmEmail(s)).success?this.logResult("Invalid Token Handling",!1,"Invalid token was accepted (security issue)","System should reject invalid tokens"):this.logResult("Invalid Token Handling",!0,"Invalid token properly rejected",void 0,{rejectedToken:s})}catch(s){return this.logResult("Invalid Token Handling",!0,"Invalid token properly rejected with exception",void 0,{error:s instanceof Error?s.message:"Unknown error"})}}async testDuplicateRegistration(){console.log(`
🧪 Testing Duplicate Registration...`);try{const s=await N.initiateSignup({email:this.testUser.email,password:"DifferentPassword123!",fullName:"Different Name",phoneNumber:"+26771234568"});return this.logResult("Duplicate Registration",!0,s.success?"Duplicate registration handled gracefully":"Duplicate registration properly rejected",void 0,{result:s.message})}catch(s){return this.logResult("Duplicate Registration",!0,"Duplicate registration handled with exception",void 0,{error:s instanceof Error?s.message:"Unknown error"})}}async cleanup(){console.log(`
🧹 Cleaning up test data...`);try{return await S.auth.signOut(),this.logResult("Cleanup",!0,"Test cleanup completed successfully")}catch(s){return this.logResult("Cleanup",!1,"Cleanup failed",s instanceof Error?s.message:"Unknown error")}}async runCompleteTestSuite(){console.log("🚀 Starting Complete User Registration Flow Test Suite..."),console.log(`📧 Test User Email: ${this.testUser.email}`),console.log("=".repeat(60)),this.testResults=[],await this.testUserRegistration(),await this.testEmailConfirmationSending(),await this.testEmailConfirmationVerification(),await this.testSupabaseLogin(),await this.testUserSession(),await this.testResendConfirmation(),await this.testInvalidToken(),await this.testDuplicateRegistration(),await this.cleanup();const s=this.testResults.length,i=this.testResults.filter(r=>r.success).length,o=s-i,l=o===0,m=`Test Suite ${l?"PASSED":"FAILED"}: ${i}/${s} tests passed`;return console.log(`
`+"=".repeat(60)),console.log(`📊 ${m}`),console.log("=".repeat(60)),this.testResults.forEach((r,j)=>{console.log(`${j+1}. ${r.success?"✅":"❌"} ${r.message}`),r.error&&console.log(`   Error: ${r.error}`)}),{success:l,totalTests:s,passedTests:i,failedTests:o,results:this.testResults,summary:m}}getTestUserData(){return{...this.testUser}}getTestResults(){return[...this.testResults]}}const ne=async()=>await new I().runCompleteTestSuite(),ae=async a=>{const s=new I;switch(a){case"registration":return await s.testUserRegistration();case"email-sending":return await s.testEmailConfirmationSending();case"email-verification":return await s.testEmailConfirmationVerification();case"login":return await s.testSupabaseLogin();case"session":return await s.testUserSession();case"resend":return await s.testResendConfirmation();case"invalid-token":return await s.testInvalidToken();case"duplicate":return await s.testDuplicateRegistration();default:throw new Error(`Unknown test: ${a}`)}},Ne=()=>{const[a,s]=d.useState(!1),[i,o]=d.useState(null),[l,m]=d.useState(null),[r,j]=d.useState({}),[b,q]=d.useState(null),[M,D]=d.useState(""),[z,$]=d.useState(""),[G,F]=d.useState(""),[W,L]=d.useState("");d.useEffect(()=>{const n=new I().getTestUserData();q(n),D(n.email),$(n.password),F(n.fullName),L(n.phoneNumber)},[]);const X=async()=>{s(!0),o(null);try{u.info("Starting complete test suite...");const t=await ne();o(t),t.success?u.success(`All tests passed! (${t.passedTests}/${t.totalTests})`):u.error(`Some tests failed (${t.failedTests}/${t.totalTests})`)}catch(t){u.error("Test suite failed to run"),console.error("Test suite error:",t)}finally{s(!1)}},_=async(t,n)=>{m(t);try{u.info(`Running ${n}...`);const c=await ae(t);j(h=>({...h,[t]:c})),c.success?u.success(`${n} passed`):u.error(`${n} failed: ${c.error}`)}catch(c){u.error(`${n} failed to run`),console.error(`${n} error:`,c)}finally{m(null)}},Q=()=>{o(null),j({}),u.info("Results cleared")},Y=()=>{if(b){const t=JSON.stringify(b,null,2);navigator.clipboard.writeText(t),u.success("Test user data copied to clipboard")}},P=[{key:"registration",name:"User Registration",icon:k},{key:"email-sending",name:"Email Sending",icon:H},{key:"email-verification",name:"Email Verification",icon:J},{key:"login",name:"Supabase Login",icon:ie},{key:"session",name:"User Session",icon:k},{key:"resend",name:"Resend Email",icon:H},{key:"invalid-token",name:"Invalid Token",icon:E},{key:"duplicate",name:"Duplicate Registration",icon:k}],v=t=>t?e.jsx(J,{className:"h-4 w-4 text-green-500"}):e.jsx(E,{className:"h-4 w-4 text-red-500"}),A=t=>e.jsx(y,{variant:t?"default":"destructive",children:t?"PASS":"FAIL"});return e.jsxs("div",{className:"container mx-auto p-6 max-w-6xl",children:[e.jsxs("div",{className:"mb-8",children:[e.jsx("h1",{className:"text-3xl font-bold mb-2",children:"User Registration Flow Test Suite"}),e.jsx("p",{className:"text-muted-foreground",children:"Comprehensive testing for user registration, email confirmation, and login functionality with Supabase integration."})]}),e.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[e.jsxs(g,{children:[e.jsxs(p,{children:[e.jsxs(x,{className:"flex items-center gap-2",children:[e.jsx(te,{className:"h-5 w-5"}),"Test Controls"]}),e.jsx(R,{children:"Run the complete test suite or individual tests"})]}),e.jsxs(f,{className:"space-y-4",children:[e.jsxs("div",{className:"flex gap-2",children:[e.jsx(T,{onClick:X,disabled:a,className:"flex-1",children:a?e.jsxs(e.Fragment,{children:[e.jsx(B,{className:"mr-2 h-4 w-4 animate-spin"}),"Running Tests..."]}):"Run Complete Test Suite"}),e.jsx(T,{variant:"outline",onClick:Q,disabled:a,children:"Clear Results"})]}),e.jsx(V,{}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"Individual Tests"}),e.jsx("div",{className:"grid grid-cols-2 gap-2",children:P.map(({key:t,name:n,icon:c})=>{const h=l===t,O=r[t];return e.jsx(T,{variant:"outline",size:"sm",onClick:()=>_(t,n),disabled:a||l!==null,className:"justify-start h-auto p-2",children:e.jsxs("div",{className:"flex items-center gap-2 w-full",children:[h?e.jsx(B,{className:"h-3 w-3 animate-spin"}):e.jsx(c,{className:"h-3 w-3"}),e.jsx("span",{className:"text-xs truncate",children:n}),O&&e.jsx("div",{className:"ml-auto",children:v(O.success)})]})},t)})})]})]})]}),e.jsxs(g,{children:[e.jsxs(p,{children:[e.jsxs(x,{className:"flex items-center gap-2",children:[e.jsx(k,{className:"h-5 w-5"}),"Test User Data"]}),e.jsx(R,{children:"Generated test user credentials for this session"})]}),e.jsx(f,{className:"space-y-4",children:b&&e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"grid grid-cols-1 gap-3",children:[e.jsxs("div",{children:[e.jsx(C,{htmlFor:"email",children:"Email"}),e.jsx(U,{id:"email",value:M,onChange:t=>D(t.target.value),className:"font-mono text-sm"})]}),e.jsxs("div",{children:[e.jsx(C,{htmlFor:"password",children:"Password"}),e.jsx(U,{id:"password",value:z,onChange:t=>$(t.target.value),className:"font-mono text-sm"})]}),e.jsxs("div",{children:[e.jsx(C,{htmlFor:"fullName",children:"Full Name"}),e.jsx(U,{id:"fullName",value:G,onChange:t=>F(t.target.value),className:"font-mono text-sm"})]}),e.jsxs("div",{children:[e.jsx(C,{htmlFor:"phoneNumber",children:"Phone Number"}),e.jsx(U,{id:"phoneNumber",value:W,onChange:t=>L(t.target.value),className:"font-mono text-sm"})]})]}),e.jsx(T,{variant:"outline",size:"sm",onClick:Y,className:"w-full",children:"Copy Test Data"})]})})]})]}),i&&e.jsxs(g,{className:"mt-6",children:[e.jsxs(p,{children:[e.jsxs(x,{className:"flex items-center gap-2",children:[v(i.success),"Test Suite Results"]}),e.jsx(R,{children:i.summary})]}),e.jsx(f,{children:e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex gap-4 text-sm",children:[e.jsx("div",{className:"flex items-center gap-2",children:e.jsxs(y,{variant:"default",children:[i.passedTests," Passed"]})}),e.jsx("div",{className:"flex items-center gap-2",children:e.jsxs(y,{variant:"destructive",children:[i.failedTests," Failed"]})}),e.jsx("div",{className:"flex items-center gap-2",children:e.jsxs(y,{variant:"outline",children:[i.totalTests," Total"]})})]}),e.jsx(V,{}),e.jsx("div",{className:"space-y-2",children:i.results.map((t,n)=>e.jsxs("div",{className:"flex items-start gap-3 p-3 rounded-lg border",children:[e.jsx("div",{className:"mt-0.5",children:v(t.success)}),e.jsxs("div",{className:"flex-1 min-w-0",children:[e.jsxs("div",{className:"flex items-center gap-2 mb-1",children:[e.jsx("span",{className:"font-medium text-sm",children:t.message}),A(t.success)]}),t.error&&e.jsxs(ee,{className:"mt-2",children:[e.jsx(E,{className:"h-4 w-4"}),e.jsx(se,{className:"text-sm",children:t.error})]}),t.data&&e.jsxs("details",{className:"mt-2",children:[e.jsx("summary",{className:"text-xs text-muted-foreground cursor-pointer hover:text-foreground",children:"View Details"}),e.jsx("pre",{className:"mt-2 p-2 bg-muted rounded text-xs overflow-auto",children:JSON.stringify(t.data,null,2)})]}),e.jsx("div",{className:"text-xs text-muted-foreground mt-1",children:new Date(t.timestamp).toLocaleString()})]})]},n))})]})})]}),Object.keys(r).length>0&&e.jsxs(g,{className:"mt-6",children:[e.jsxs(p,{children:[e.jsx(x,{children:"Individual Test Results"}),e.jsx(R,{children:"Results from running individual tests"})]}),e.jsx(f,{children:e.jsx("div",{className:"space-y-2",children:Object.entries(r).map(([t,n])=>{const c=P.find(h=>h.key===t);return e.jsxs("div",{className:"flex items-center gap-3 p-3 rounded-lg border",children:[e.jsx("div",{children:v(n.success)}),e.jsxs("div",{className:"flex-1",children:[e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsxs("span",{className:"font-medium text-sm",children:[(c==null?void 0:c.name)||t,": ",n.message]}),A(n.success)]}),n.error&&e.jsx("div",{className:"text-xs text-red-600 mt-1",children:n.error})]}),e.jsx("div",{className:"text-xs text-muted-foreground",children:new Date(n.timestamp).toLocaleString()})]},t)})})})]}),e.jsxs(g,{className:"mt-6",children:[e.jsx(p,{children:e.jsx(x,{children:"Testing Instructions"})}),e.jsx(f,{children:e.jsxs("div",{className:"space-y-3 text-sm",children:[e.jsxs("div",{children:[e.jsx("strong",{children:"Complete Test Suite:"})," Runs all tests in sequence, simulating a real user journey from registration to login."]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Individual Tests:"})," Run specific parts of the flow for targeted testing and debugging."]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Test User Data:"})," Each session generates unique test credentials to avoid conflicts."]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Requirements:"})," Ensure the backend API is running on localhost:3001 and Supabase is properly configured."]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Edge Cases:"})," The test suite includes validation for invalid tokens, duplicate registrations, and error handling."]})]})})]})]})};export{Ne as default};
