var l=Object.defineProperty;var u=(o,e,s)=>e in o?l(o,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[e]=s;var p=(o,e,s)=>u(o,typeof e!="symbol"?e+"":e,s);import{s as m}from"./index-DIwI39m3.js";import"./query-vendor-Bsfdn-Hb.js";import"./react-vendor-mnpoGfEl.js";import"./supabase-vendor-BOn0LdFJ.js";import"./mapbox-vendor-fnXFVHMy.js";import"./date-vendor-Dhms5dOu.js";const t=class t{static getInstance(){return t.instance||(t.instance=new t),t.instance}constructor(){console.log("üöÄ TwilioNotificationService initialized")}async sendWhatsApp(e,s,a){try{const{data:r,error:n}=await m.functions.invoke("send-whatsapp",{body:{to:e.startsWith("+")?e:`+${e}`,templateSid:s,variables:a}});if(n)throw n;return console.log(`‚úÖ WhatsApp sent successfully: ${r.messageId}`),{success:!0,messageId:r.messageId}}catch(r){return console.error("‚ùå WhatsApp sending failed:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}async sendEmail(e,s,a,r){try{const{data:n,error:c}=await m.functions.invoke("send-email",{body:{to:e,templateId:s,dynamicData:{...a,companyName:"MobiRides",supportEmail:"support@mobirides.com",year:new Date().getFullYear()},subject:r}});if(c)throw c;return console.log(`‚úÖ Email sent successfully to ${e}`),{success:!0,messageId:n.messageId}}catch(n){return console.error("‚ùå Email sending failed:",n),{success:!1,error:n instanceof Error?n.message:"Unknown error"}}}async sendBookingConfirmation(e,s){const a={};if(e.whatsappEnabled&&e.phone){const r=await this.sendWhatsApp(e.phone,"BOOKING_CONFIRMATION_TEMPLATE",{1:e.name,2:s.bookingReference,3:`${s.carBrand} ${s.carModel}`,4:s.pickupDate,5:s.pickupTime,6:s.pickupLocation});a.whatsapp=r}if(e.emailEnabled&&e.email){const r=await this.sendEmail(e.email,"booking-confirmation",{customerName:e.name,bookingReference:s.bookingReference,carDetails:`${s.carBrand} ${s.carModel}`,pickupDate:s.pickupDate,pickupTime:s.pickupTime,pickupLocation:s.pickupLocation,dropoffLocation:s.dropoffLocation,totalAmount:s.totalAmount,hostName:s.hostName});a.email=r}return a}async sendPickupReminder(e,s,a){const r={},n=a===24?"tomorrow":`in ${a} hours`;if(e.whatsappEnabled&&e.phone){const c=await this.sendWhatsApp(e.phone,"PICKUP_REMINDER_TEMPLATE",{1:e.name,2:`${s.carBrand} ${s.carModel}`,3:n,4:s.pickupLocation,5:s.pickupTime});r.whatsapp=c}return r}};p(t,"instance");let i=t;export{i as TwilioNotificationService};
