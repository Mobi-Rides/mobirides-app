import{r as g,s as u,J as h,j as e,B as j}from"./index-BAM2AQzj.js";import{a as x}from"./useQuery-BBHzqejZ.js";import{w as _,T as v}from"./TopUpModal-BwRCNlbi.js";import{C as F,d as E}from"./card-C82ETfr4.js";import{B as P}from"./badge-La64XLSg.js";import{W as b}from"./wallet-Bu1-cXfs.js";import{P as N}from"./plus-bFfdWSCz.js";import{I as k}from"./info-Bq3MZNaT.js";import{T as S}from"./triangle-alert-ey-Y21ny.js";function R(s){const[o,i]=g.useState(!1);return g.useEffect(()=>{const n=window.matchMedia(s);n.matches!==o&&i(n.matches);const a=()=>i(n.matches);return n.addEventListener("change",a),()=>n.removeEventListener("change",a)},[o,s]),o}function z(){return R("(max-width: 768px)")}const p=async()=>{try{console.log("CommissionRates: Fetching current commission rate");const{data:s,error:o}=await u.from("commission_rates").select("rate").lte("effective_from",new Date().toISOString()).or("effective_until.is.null,effective_until.gt."+new Date().toISOString()).order("effective_from",{ascending:!1}).limit(1).single();return o?(console.error("CommissionRates: Error fetching commission rate:",o),.15):(console.log("CommissionRates: Commission rate fetched:",s.rate),s.rate)}catch(s){return console.error("CommissionRates: Unexpected error fetching commission rate:",s),.15}},C=(s,o)=>{const i=Math.round(s*o*100)/100,n=s-i;return{bookingTotal:s,commissionRate:o,commissionAmount:i,hostReceives:n}},A=async(s,o)=>{try{console.log("WalletValidation: Checking if host can accept booking",{hostId:s,bookingTotal:o});const i=await p(),n=C(o,i),{data:a,error:t}=await u.from("host_wallets").select("balance").eq("host_id",s).single();if(t)return console.error("WalletValidation: Error fetching wallet:",t),{canAccept:!1,commissionAmount:n.commissionAmount,currentBalance:0,message:"Wallet not found. Please contact support."};const m=a.balance||0,l=50,c=l+n.commissionAmount,r=m>=c;return console.log("WalletValidation: Booking acceptance check result",{canAccept:r,commissionAmount:n.commissionAmount,currentBalance:m,minimumRequired:l,totalRequired:c}),{canAccept:r,commissionAmount:n.commissionAmount,currentBalance:m,message:r?void 0:`Insufficient wallet balance. Need at least P${c.toFixed(2)} (P${l} minimum + P${n.commissionAmount.toFixed(2)} commission), have P${m.toFixed(2)}`}}catch(i){return console.error("WalletValidation: Error checking booking acceptance:",i),{canAccept:!1,commissionAmount:0,currentBalance:0,message:"Error checking wallet balance. Please try again."}}},q=async(s,o,i)=>{try{console.log("CommissionDeduction: Processing commission from wallet balance",{hostId:s,bookingId:o,bookingTotal:i});const n=await p(),a=C(i,n),t=await A(s,i);if(!t.canAccept)return console.error("CommissionDeduction: Host cannot accept booking due to insufficient funds"),h.error(t.message||"Insufficient wallet balance"),!1;const{data:m,error:l}=await u.from("host_wallets").select("id, balance").eq("host_id",s).single();if(l)return console.error("CommissionDeduction: Error fetching wallet for commission deduction:",l),!1;const c=m.balance-a.commissionAmount,{error:r}=await u.from("host_wallets").update({balance:c,updated_at:new Date().toISOString()}).eq("id",m.id);if(r)return console.error("CommissionDeduction: Error updating wallet balance:",r),!1;const{error:d}=await u.from("wallet_transactions").insert({wallet_id:m.id,booking_id:o,transaction_type:"commission_deduction",amount:-a.commissionAmount,balance_before:m.balance,balance_after:c,description:`Platform commission (${(a.commissionRate*100).toFixed(1)}%) deducted from wallet`,status:"completed",commission_rate:a.commissionRate,booking_reference:`BOOKING_${o.slice(-8)}`});d&&console.error("CommissionDeduction: Error recording commission transaction:",d);const{error:f}=await u.from("bookings").update({commission_amount:a.commissionAmount,commission_status:"deducted"}).eq("id",o);return f&&console.error("CommissionDeduction: Error updating booking commission info:",f),console.log("CommissionDeduction: Commission deducted successfully from wallet"),h.success(`Booking confirmed! Commission of P${a.commissionAmount.toFixed(2)} deducted from wallet`),!0}catch(n){return console.error("CommissionDeduction: Error processing commission:",n),h.error("Failed to process commission. Please try again."),!1}};class O{async getCurrentCommissionRate(){return p()}async calculateCommission(o){const i=await p();return C(o,i)}async checkHostCanAcceptBooking(o,i){return A(o,i)}async processCommissionOnBookingConfirmation(o,i,n){return q(o,i,n)}async deductCommissionOnBookingAcceptance(o,i,n){return this.processCommissionOnBookingConfirmation(o,i,n)}}const w=new O;typeof window<"u"&&(window.commissionService=w,console.log("CommissionService available in console for testing"));const J=({bookingTotal:s,showCommissionBreakdown:o=!1,compact:i=!1})=>{const[n,a]=g.useState(!1),{data:t}=x({queryKey:["current-user"],queryFn:async()=>{const{data:{user:B}}=await u.auth.getUser();return B}}),{data:m,refetch:l}=x({queryKey:["wallet-balance",t==null?void 0:t.id],queryFn:async()=>t!=null&&t.id?await _.getWalletBalance(t.id):null,enabled:!!(t!=null&&t.id)}),{data:c}=x({queryKey:["commission-calculation",s],queryFn:async()=>s?await w.calculateCommission(s):null,enabled:!!s}),{data:r}=x({queryKey:["booking-acceptance-check",t==null?void 0:t.id,s],queryFn:async()=>!(t!=null&&t.id)||!s?null:await w.checkHostCanAcceptBooking(t.id,s),enabled:!!(t!=null&&t.id)&&!!s}),d=(m==null?void 0:m.balance)||0;c!=null&&c.commissionAmount;const f=(r==null?void 0:r.canAccept)??!0,y=()=>{l(),a(!1)};return i?e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx(b,{className:"h-4 w-4"}),e.jsxs("span",{className:"text-sm font-medium",children:["P",d.toFixed(2)]}),s&&!f&&e.jsx(P,{variant:"destructive",className:"text-xs",children:"Low Balance"}),e.jsx(j,{variant:"outline",size:"sm",onClick:()=>a(!0),className:"h-6 px-2 text-xs",children:e.jsx(N,{className:"h-3 w-3"})})]}),e.jsx(v,{isOpen:n,onClose:()=>a(!1),onSuccess:y,currentBalance:d})]}):e.jsxs(e.Fragment,{children:[e.jsx(F,{className:`${f?"":"border-destructive bg-destructive/5"}`,children:e.jsx(E,{className:"p-4",children:e.jsxs("div",{className:"flex items-start justify-between",children:[e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx(b,{className:"h-5 w-5 text-primary"}),e.jsx("h3",{className:"font-semibold",children:"Wallet Balance"})]}),e.jsxs("div",{className:"space-y-1",children:[e.jsxs("p",{className:"text-2xl font-bold",children:["P",d.toFixed(2)]}),o&&c&&e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex items-center gap-2 p-2 bg-blue-50 dark:bg-blue-950 rounded-lg",children:[e.jsx(k,{className:"h-4 w-4 text-blue-600 dark:text-blue-400"}),e.jsxs("div",{className:"text-xs text-blue-700 dark:text-blue-300",children:[e.jsx("p",{className:"font-medium",children:"Commission is deducted from your wallet balance"}),e.jsxs("p",{children:["You receive the full rental earnings (P",c.bookingTotal.toFixed(2),")"]})]})]}),e.jsxs("div",{className:"space-y-1 text-sm text-muted-foreground",children:[e.jsxs("p",{children:["Booking Total: P",c.bookingTotal.toFixed(2)]}),e.jsxs("p",{children:["Commission (",(c.commissionRate*100).toFixed(1),"%): P",c.commissionAmount.toFixed(2)]}),e.jsxs("p",{className:"font-medium text-foreground",children:["You'll earn: P",c.bookingTotal.toFixed(2)]}),e.jsxs("p",{className:"text-xs text-muted-foreground",children:["Commission paid from wallet: P",c.commissionAmount.toFixed(2)]})]})]})]}),!f&&(r==null?void 0:r.message)&&e.jsxs("div",{className:"flex items-start gap-2 mt-2",children:[e.jsx(S,{className:"h-4 w-4 text-destructive mt-0.5 flex-shrink-0"}),e.jsx("p",{className:"text-sm text-destructive",children:r.message})]})]}),e.jsxs(j,{variant:"outline",size:"sm",onClick:()=>a(!0),className:"flex items-center gap-2",children:[e.jsx(N,{className:"h-4 w-4"}),"Top Up"]})]})})}),e.jsx(v,{isOpen:n,onClose:()=>a(!1),onSuccess:y,currentBalance:d})]})};export{J as W,w as c,z as u};
