import{c,s,J as a}from"./index-6IS4AKTX.js";/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const i=c("CircleGauge",[["path",{d:"M15.6 2.7a10 10 0 1 0 5.7 5.7",key:"1e0p6d"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}],["path",{d:"M13.4 10.6 19 5",key:"1kr7tw"}]]);/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const u=c("Heart",[["path",{d:"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",key:"c3ymky"}]]),l=async e=>{try{console.log("Saving car:",e);const{data:{session:r}}=await s.auth.getSession();if(!(r!=null&&r.user))return console.log("No active session found when trying to save car"),a.error("Please sign in to save cars"),!1;const{data:o}=await s.from("saved_cars").select("id").eq("user_id",r.user.id).eq("car_id",e).maybeSingle();if(o)return console.log("Car already saved:",e),!0;const{error:t}=await s.from("saved_cars").insert({user_id:r.user.id,car_id:e});return t?(console.error("Error saving car:",t),a.error("Failed to save car. Please try again."),!1):(a.success("Car saved to your favorites"),!0)}catch(r){return console.error("Error in saveCar:",r),a.error("An error occurred while saving the car"),!1}},d=async e=>{try{console.log("Unsaving car:",e);const{data:{session:r}}=await s.auth.getSession();if(!(r!=null&&r.user))return console.log("No active session found when trying to unsave car"),a.error("Please sign in to manage saved cars"),!1;const{error:o}=await s.from("saved_cars").delete().eq("user_id",r.user.id).eq("car_id",e);return o?(console.error("Error unsaving car:",o),a.error("Failed to remove car from favorites. Please try again."),!1):(a.success("Car removed from your favorites"),!0)}catch(r){return console.error("Error in unsaveCar:",r),a.error("An error occurred while removing the car from favorites"),!1}},v=async e=>{try{const{data:{session:r}}=await s.auth.getSession();if(!(r!=null&&r.user))return!1;const{data:o}=await s.from("saved_cars").select("id").eq("user_id",r.user.id).eq("car_id",e).maybeSingle();return!!o}catch(r){return console.error("Error checking if car is saved:",r),!1}};export{i as C,u as H,v as i,l as s,d as u};
