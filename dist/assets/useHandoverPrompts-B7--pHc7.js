var U=Object.defineProperty;var L=(s,e,t)=>e in s?U(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var T=(s,e,t)=>L(s,typeof e!="symbol"?e+"":e,t);import{u as E}from"./query-vendor-BOSMW7hd.js";import{u as q}from"./useAuthStatus-C5dzrHBE.js";import{_ as F}from"./supabase-vendor-B3A6ooRR.js";import{s as b}from"./index-BnOLzhwz.js";import{a as H,b as k}from"./date-vendor-Dhms5dOu.js";class A{static async detectHandoverPrompts(e,t){const{logger:a}=await F(async()=>{const{logger:n}=await Promise.resolve().then(()=>C);return{logger:n}},void 0);try{if(!e||!t)return a.debug("detectHandoverPrompts: No userId or userRole provided"),[];a.debug(`Detecting handover prompts for ${t}:`,e);const n=new Date,y=new Date(n.getFullYear(),n.getMonth(),n.getDate()),v=new Date(n.getFullYear(),n.getMonth(),n.getDate(),23,59,59);let l=b.from("bookings").select(`
          id,
          car_id,
          start_date,
          end_date,
          status,
          cars (
            brand,
            model,
            location,
            owner_id
          ),
          renter:profiles!renter_id (
            full_name
          ),
          host:cars!inner(
            owner:profiles!owner_id (
              full_name
            )
          )
        `).eq("status","confirmed").or(`start_date.eq.${H(n,"yyyy-MM-dd")},end_date.eq.${H(n,"yyyy-MM-dd")}`);if(t==="host"){const{data:o}=await b.from("cars").select("id").eq("owner_id",e);if(!(o!=null&&o.length))return[];const h=o.map(g=>g.id);l=l.in("car_id",h)}else l=l.eq("renter_id",e);const{data:i,error:c}=await l;if(c)throw a.error("Error fetching handover prompts:",c),new Error(`Failed to fetch handover prompts: ${c.message}`);if(!(i!=null&&i.length))return a.debug("No bookings found for handover prompts"),[];const r=i.map(o=>o.id),{data:u}=await b.from("handover_sessions").select(`
          booking_id, 
          handover_completed,
          created_at,
          handover_step_completion (
            step_name,
            is_completed,
            step_order
          )
        `).in("booking_id",r).order("created_at",{ascending:!0}),f=new Map;u==null||u.forEach(o=>{f.has(o.booking_id)||f.set(o.booking_id,[]),f.get(o.booking_id).push(o)});const p=[];for(const o of i){const h=f.get(o.id)||[],g=new Date(o.start_date),w=new Date(o.end_date),M=k(g),I=k(w),N=h.filter(d=>new Date(d.created_at)<=new Date(w.getTime()+24*60*60*1e3)),S=h.filter(d=>new Date(d.created_at)>=new Date(w.getTime())),D=N.some(d=>{var m;return d.handover_completed||((m=d.handover_step_completion)==null?void 0:m.length)>0&&d.handover_step_completion.every(P=>P.is_completed)}),$=S.some(d=>{var m;return d.handover_completed||((m=d.handover_step_completion)==null?void 0:m.length)>0&&d.handover_step_completion.every(P=>P.is_completed)});D&&$||(M&&!D&&p.push(this.createHandoverPrompt(o,"pickup",t)),I&&D&&!$&&p.push(this.createHandoverPrompt(o,"return",t)))}return a.debug(`Found ${p.length} handover prompts for ${t}`),p}catch(n){return a.error("Error in detectHandoverPrompts:",n),[]}}static createHandoverPrompt(e,t,a){var p,o,h,g;const n=new Date(e.start_date),y=new Date(e.end_date),v=new Date,i=((t==="pickup"?n:y).getTime()-v.getTime())/(1e3*60*60);let c="morning",r=!1;i<=.5?(c="immediate",r=!0):i<=2?(c="soon",r=!0):i<=8&&(c="morning",r=!1);let u=!1;(t==="pickup"&&a==="renter"||t==="return"&&a==="renter")&&(u=!0);const f=a==="renter"?((h=(o=(p=e.host)==null?void 0:p[0])==null?void 0:o.owner)==null?void 0:h.full_name)||"Host":((g=e.renter)==null?void 0:g.full_name)||"Renter";return{id:e.id,bookingId:e.id,carId:e.car_id,handoverType:t,isUrgent:r,urgencyLevel:c,carBrand:e.cars.brand,carModel:e.cars.model,startDate:n,endDate:y,userRole:a,shouldInitiate:u,otherPartyName:f,location:e.cars.location}}static getUrgencyMessage(e){switch(e.handoverType,e.urgencyLevel){case"immediate":return`🚨 URGENT: ${e.handoverType} time is now!`;case"soon":return`⏰ ${e.handoverType.charAt(0).toUpperCase()+e.handoverType.slice(1)} in less than 2 hours`;case"morning":return`📅 ${e.handoverType.charAt(0).toUpperCase()+e.handoverType.slice(1)} today`;default:return`${e.handoverType.charAt(0).toUpperCase()+e.handoverType.slice(1)} today`}}static getActionMessage(e){return e.shouldInitiate?e.handoverType==="pickup"?`Start pickup process with ${e.otherPartyName}`:`Start return process with ${e.otherPartyName}`:e.handoverType==="pickup"?`Prepare for pickup by ${e.otherPartyName}`:`Prepare for return from ${e.otherPartyName}`}}class O{constructor(){T(this,"isDevelopment",!1)}shouldLog(e){return this.isDevelopment?!0:e==="warn"||e==="error"}debug(e,...t){this.shouldLog("debug")&&console.log(`[DEBUG] ${e}`,...t)}info(e,...t){this.shouldLog("info")&&console.info(`[INFO] ${e}`,...t)}warn(e,...t){this.shouldLog("warn")&&console.warn(`[WARN] ${e}`,...t)}error(e,t,...a){this.shouldLog("error")&&console.error(`[ERROR] ${e}`,t,...a)}}const _=new O,C=Object.freeze(Object.defineProperty({__proto__:null,logger:_},Symbol.toStringTag,{value:"Module"})),x=()=>{const{userId:s,userRole:e}=q(),{data:t=[],isLoading:a,error:n,refetch:y}=E({queryKey:["handover-prompts",s,e],queryFn:async()=>{try{if(!s||!e)return _.debug("useHandoverPrompts: No userId or userRole, returning empty array"),[];_.debug("useHandoverPrompts: Fetching handover prompts",{userId:s,userRole:e});const r=await A.detectHandoverPrompts(s,e);return _.debug("useHandoverPrompts: Successfully fetched prompts",{count:r.length}),r}catch(r){return _.error("useHandoverPrompts: Failed to fetch handover prompts",r),[]}},enabled:!!s&&!!e,refetchInterval:5*60*1e3,staleTime:2*60*1e3,retry:(r,u)=>(_.warn("useHandoverPrompts: Query failed, retry attempt",{failureCount:r,error:u}),r<2),retryDelay:r=>Math.min(1e3*2**r,3e4)}),v=t.filter(r=>r.isUrgent),l=t.filter(r=>!r.isUrgent),i=t.filter(r=>r.shouldInitiate),c=t.filter(r=>!r.shouldInitiate);return{handoverPrompts:t,urgentPrompts:v,todayPrompts:l,userShouldInitiate:i,userShouldPrepare:c,hasHandoverPrompts:t.length>0,hasUrgentPrompts:v.length>0,isLoading:a,error:n,refetch:y}};export{x as u};
